fileTypes: ["src"]
name: "ABNF"
patterns: [
  {include: '#comment.line'}
  {
    # 
    match: '^\\s*([a-zA-Z][-a-zA-Z0-9]*)\\s*(=)(.*)$'
    captures:
      '1':
        name: 'entity.name.function.bnf'
      '2':
        name: 'keyword.operator.assignment'
      '3':
        name: 'expression'
        patterns:[
          {include: '#constant.numeric.hexadecimal'}
          {include: '#constant.numeric.decimal'}
          {include: '#constant.numeric.binary'}
          {include: '#string.quoted.double'}
          {include: '#constant.core-rule'}
          {include: '#comment.line'}
        ]
  }
]
repository:
  # semi-colon end of line comment
  'comment.line':
    match: '\\s*(;.*)$'
    captures:
      '1':
        name: 'comment.line.semi-colon.bnf'
  'constant.core-rule':
    match: '(ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'
    captures:
      '1':
        name: 'constant.string.core-rule.bnf'

  # numeric constants like %d12-52 %b01011 %x0A.42.12
  'constant.numeric.hexadecimal':
    name: "constant.numeric.hexadecimal.bnf"
    match: '%x[0-9A-F]+([-\\.][0-9A-F]+)*'
  'constant.numeric.binary':
    name: "constant.numeric.binary.bnf"
    match: '%b[01]+([-\\.][10]+)*'
  'constant.numeric.decimal':
    name: "constant.numeric.decimal.bnf"
    match: '%d[0-9]+([-\\.][0-9]+)*'
  # String literals
  'string.quoted.double':  
    begin: '"'
    end: '"'
    name: 'string.quoted.double.bnf'
  "rule-name":
    match: "(<)(.*?)(>)"
    captures:
      "1":
        name: "punctuation.rule-name.start.bnf"
      "2":
        name: "constant.other.symbol.bnf"
      "3":
        name: "punctuation.rule-name.end.bnf"
scope: "text.bnf"
scopeName: "text.bnf"
